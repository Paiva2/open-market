server:
  port: 8080

spring:
  application:
    name: open-market-gateway
  cloud:
    gateway:
      routes:
        - id: users_route
          uri: lb://OPEN-MARKET-USERS
          predicates:
            - Path=/api/user/**
        - id: items_route
          uri: lb://OPEN-MARKET-ITEMS
          predicates:
            - Path=/api/item/**
        - id: wallets_route
          uri: lb://OPEN-MARKET-WALLET
          predicates:
            - Path=/api/wallet/**
        - id: market_route
          uri: lb://OPEN-MARKET-MARKET
          predicates:
            - Path=/api/market/**
      default-filters:
        - TokenRelay=
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - SaveSession
        - StripPrefix=1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}
      client:
        provider:
          keycloak:
            issuer-uri: ${JWT_ISSUER_URI}
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: ${KC_CLIENT_ID}
            client-secret: ${KC_CLIENT_SECRET}
            scope: openid, profile, email
  data:
    mongodb:
      host: ${MONGODB_HOST}
      port: ${MONGODB_PORT}
      database: ${MONGODB_DATABASE}
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      uri: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/

eureka:
  client:
    fetch-registry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}

mongock:
  migration-scan-package: org.com.openmarket.gateway.application.config.mongo.migrations